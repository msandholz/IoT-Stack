version: "3"
services:
  nodered: 
    build: ./nodered
    image: localbuild/nodered:april2021
    container_name: nodered
    restart: unless-stopped
    ports: 
      - "1880:1880"
    volumes:
      - noderedData:/data
    networks:
      - edge
  grafana:
    build: ./grafana
    image: localbuild/grafana:april2021
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes: 
      - grafanaData:/var/lib/grafana
    networks:
      - edge
  influxdb:
    build: ./influx
    image: localbuild/influxdb:april2021
    container_name: influxdb
    restart: unless-stopped
    environment:
      INFLUXDB_DB: DBONE
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: change
      INFLUXDB_ADMIN_PASSWORD: this
      INFLUXDB_USER: and_change
      INFLUXDB_USER_PASSWORD: this_too
    ports:
      - "8082:8082"
      - "8086:8086"
      - "8089:8089"
    volumes:
      - influxData:/var/lib/influxdb
    networks: 
      - edge
  mosquitto:
    build: ./mosquitto
    image: localbuild/mosquitto:april2021
    container_name: mosquitto
    restart: unless-stopped
    ports: 
      - "8883:1883"
      - "9001:9001"
    volumes: 
      - mosquittoConfig:/mosquitto/config
      - mosquittoLog:/mosquitto/log
      - mosquittoData:/mosquitto/data
    networks:
      - edge
          
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    ports:
      - 8999:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainerData:/portainer/data
    networks:
      - edge    
      
#Create internal link network for Containers
networks:
  edge:

#Create Volumes for persistent Storage
volumes:
  grafanaData:
  noderedData:
  influxData:
  mosquittoLog:
  mosquittoData:
  mosquittoConfig:
  portainerData:
